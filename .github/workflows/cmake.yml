name: CMake

on: [pull_request, workflow_dispatch]

env:
  BUILD_TYPE: Release
  VULKAN_SDK_VERSION: 1.2.170.0
  EXP_3RD_VERSION: v0.4

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Update SubModules
      run: |
        git submodule init
        git submodule update

    - name: Install 7-zip
      run: |
        Invoke-WebRequest -Uri https://7-zip.org/a/7z1900-x64.msi -OutFile 7z.msi
        msiexec.exe /package 7z.msi /qn
        echo "C:\Program Files\7-Zip" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
    - name: Get 3rd Party Package
      run: |
        Invoke-WebRequest -Uri https://github.com/ExplosionEngine/Explosion3rdParty/releases/download/Win-${{env.EXP_3RD_VERSION}}/Win.zip -OutFile Win.zip
        7z x Win.zip
    
    - name: Install Vulkan SDK
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/${{env.VULKAN_SDK_VERSION}}/windows/VulkanSDK-${{env.VULKAN_SDK_VERSION}}-Installer.exe -OutFile Vulkan-Installer.exe
        7z x .\Vulkan-Installer.exe -oVulkanSDK
        $value=$ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath("VulkanSDK")
        echo VULKAN_SDK=$value | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo $env:VULKAN_SDK\Bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Configure CMake
      run: |
        $value=$ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath("Win")
        cmake -S . -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DEXP_3RD_ROOT="$value"

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}} -j 8
    
    - name: Run Unit Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Init Submodules
        run: |
          git submodule init
          git submodule update

      - name: Set Env
        id: env
        run: |
          VULKAN_SDK=$GITHUB_WORKSPACE/../vulkansdk-macos-${{env.VULKAN_SDK_VERSION}}/macOS
          echo ::set-output name=VULKAN_SDK::$VULKAN_SDK
          echo "VK_LAYER_PATH=$VULKAN_SDK/etc/vulkan/explicit_layer.d" >> $GITHUB_ENV
          echo "VK_ICD_FILENAMES=$VULKAN_SDK/etc/vulkan/icd.d/MoltenVK_icd.json" >> $GITHUB_ENV

      - name: Cache
        id: cache
        uses: actions/cache@v1.1.2
        with:
          path: ${{steps.env.outputs.VULKAN_SDK}}
          key: VulkanSdk${{env.VULKAN_SDK_VERSION}}ExtractedMacos

      - name: Download & Extract Vulkan SDK
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          wget --no-cookies -O ../vulkansdk-macos-${{env.VULKAN_SDK_VERSION}}.dmg https://sdk.lunarg.com/sdk/download/${{env.VULKAN_SDK_VERSION}}/mac/vulkansdk-macos-${{env.VULKAN_SDK_VERSION}}.dmg?u=
          hdiutil attach ../vulkansdk-macos-${{env.VULKAN_SDK_VERSION}}.dmg
          cp -r /Volumes/vulkansdk-macos-${{env.VULKAN_SDK_VERSION}} $GITHUB_WORKSPACE/..
          hdiutil detach /Volumes/vulkansdk-macos-${{env.VULKAN_SDK_VERSION}}

      - name: CMake
        run: |
          echo "DYLD_LIBRARY_PATH=$VULKAN_SDK/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PATH=$VULKAN_SDK:$VULKAN_SDK/bin:$PATH" >> $GITHUB_ENV
          cmake -D CMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/../vsg-$GITHUB_SHA" . -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        env:
          VULKAN_SDK: ${{steps.env.outputs.VULKAN_SDK}}

      - name: Make
        run: make -j 8

      - name: Run Unit Test
        run: ctest -C $BUILD_TYPE
